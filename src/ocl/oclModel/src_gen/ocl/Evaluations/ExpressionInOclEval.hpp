//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef OCL_EVALUATIONS_EXPRESSIONINOCLEVAL_HPP
#define OCL_EVALUATIONS_EXPRESSIONINOCLEVAL_HPP

#include <list>
#include <memory>
#include <string>


// forward declarations



//*********************************
// generated Includes

#include <map>

namespace persistence
{
	namespace interfaces
	{
		class XLoadHandler; // used for Persistence
		class XSaveHandler; // used for Persistence
	}
}

namespace ocl
{
	class oclFactory;
}

//Forward Declaration for used types
namespace ocl::Evaluations 
{
	class EvalEnvironment;
}

namespace ocl::Evaluations 
{
	class OclExpEval;
}

// base class includes

// enum includes

#include "ecore/EModelElement.hpp"

//*********************************
namespace ocl::Evaluations 
{
	
	class ExpressionInOclEval : virtual public ecore::EModelElement

	{
		public:
 			ExpressionInOclEval(const ExpressionInOclEval &) {}

		protected:
			ExpressionInOclEval(){}


		public:
			virtual std::shared_ptr<ecore::EObject> copy() const = 0;

			//destructor
			virtual ~ExpressionInOclEval() {}

			//*********************************
			// Operations
			//*********************************
			
			//*********************************
			// Attributes Getter Setter
			//*********************************
			
			//*********************************
			// Reference
			//*********************************
			
			virtual std::shared_ptr<ocl::Evaluations::OclExpEval > getContext() const = 0;
			
			
			virtual void setContext(std::shared_ptr<ocl::Evaluations::OclExpEval> _context) = 0;
			
			
			virtual std::shared_ptr<ocl::Evaluations::EvalEnvironment > getEnvironment() const = 0;
			
			
			virtual void setEnvironment(std::shared_ptr<ocl::Evaluations::EvalEnvironment> _environment) = 0;
			
			

		protected:
			//*********************************
			// Attribute Members
			//*********************************
			
			
			//*********************************
			// Reference Members
			//*********************************
			
			std::shared_ptr<ocl::Evaluations::OclExpEval > m_context;
			std::shared_ptr<ocl::Evaluations::EvalEnvironment > m_environment;

		public:
			//*********************************
			// Union Getter
			//*********************************
			

			virtual std::shared_ptr<ecore::EObject> eContainer() const = 0; 
			
			//*********************************
			// Persistence Functions
			//*********************************
			virtual void load(std::shared_ptr<persistence::interfaces::XLoadHandler> loadHandler) = 0;
			
			virtual void resolveReferences(const int featureID, std::list<std::shared_ptr<ecore::EObject> > references) = 0;
			virtual void save(std::shared_ptr<persistence::interfaces::XSaveHandler> saveHandler) const = 0;
			
	};

}
#endif /* end of include guard: OCL_EVALUATIONS_EXPRESSIONINOCLEVAL_HPP */
