//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef OCL_OCLCSPACKAGEIMPL_HPP
#define OCL_OCLCSPACKAGEIMPL_HPP

#include "ecore/ecorePackage.hpp"
#include "ecore/impl/EPackageImpl.hpp"

#include "ocl/OclCS/OclCSPackage.hpp" 


namespace ocl::OclCS 
{
}

namespace ecore
{
	class ecoreFactory;
}

namespace ocl::OclCS
{
	class OclCSPackageImpl : public ecore::EPackageImpl ,virtual public OclCSPackage
	{
		private:    
			OclCSPackageImpl(OclCSPackageImpl const&) = delete;
			OclCSPackageImpl& operator=(OclCSPackageImpl const&) = delete;

		protected:
			OclCSPackageImpl();

		public:
			virtual ~OclCSPackageImpl();


			
			// SubPackages Getters
			

		private:
			
			
			
			
			

			friend class OclCSPackage;

			static bool isInited;
			static OclCSPackage* create();
			bool isInitialized = false;
 			bool isCreated = false;

			virtual void init(std::shared_ptr<ecore::EPackage> package);

		public:
			void createPackageContents(std::shared_ptr<ecore::EPackage> package);
			void initializePackageContents();

		private:
			void createPackageEDataTypes(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::ecoreFactory> factory);

			void initializePackageEDataTypes();



	};
}
#endif /* end of include guard: OCL_OCLCSPACKAGEIMPL_HPP */
