//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef OCL_VALUES_LOCALSNAPSHOT_HPP
#define OCL_VALUES_LOCALSNAPSHOT_HPP

#include <list>
#include <memory>
#include <string>


// forward declarations
template<class T> class Bag; 



//*********************************
// generated Includes

#include <map>

namespace persistence
{
	namespace interfaces
	{
		class XLoadHandler; // used for Persistence
		class XSaveHandler; // used for Persistence
	}
}

namespace ocl
{
	class OclFactory;
}

//Forward Declaration for used types
namespace ocl::Values 
{
	class LocalSnapshot;
}

namespace ocl::Values 
{
	class NameValueBinding;
}

namespace ocl::Values 
{
	class OclMessageValue;
}

// base class includes

// enum includes

#include "ecore/EObject.hpp"

//*********************************
namespace ocl::Values 
{
	/*!
	 */
	class LocalSnapshot : virtual public ecore::EObject 

	{
		public:
 			LocalSnapshot(const LocalSnapshot &) {}
			LocalSnapshot& operator=(LocalSnapshot const&) = delete;

		protected:
			LocalSnapshot(){}


		public:
			virtual std::shared_ptr<ecore::EObject> copy() const = 0;

			//destructor
			virtual ~LocalSnapshot() {}

			//*********************************
			// Operations
			//*********************************
			
			//*********************************
			// Attributes Getter Setter
			//*********************************
			/*!
			 */ 
			virtual bool getIsPost() const = 0;
			
			/*!
			 */ 
			virtual void setIsPost (bool _isPost)= 0; 
			
			/*!
			 */ 
			virtual bool getIsPre() const = 0;
			
			/*!
			 */ 
			virtual void setIsPre (bool _isPre)= 0; 
			
			
			//*********************************
			// Reference
			//*********************************
			/*!
			 */
			virtual std::shared_ptr<Bag<ocl::Values::NameValueBinding>> getBindings() const = 0;
			
			/*!
			 */
			virtual std::shared_ptr<Bag<ocl::Values::OclMessageValue>> getInputQ() const = 0;
			
			/*!
			 */
			virtual std::shared_ptr<Bag<ocl::Values::OclMessageValue>> getOutputQ() const = 0;
			
			/*!
			 */
			virtual std::shared_ptr<ocl::Values::LocalSnapshot > getPred() const = 0;
			
			/*!
			 */
			virtual void setPred(std::shared_ptr<ocl::Values::LocalSnapshot> _pred_pred) = 0;
			/*!
			 */
			virtual std::shared_ptr<ocl::Values::LocalSnapshot > getSucc() const = 0;
			
			/*!
			 */
			virtual void setSucc(std::shared_ptr<ocl::Values::LocalSnapshot> _succ_succ) = 0;
			

		protected:
			//*********************************
			// Attribute Members
			//*********************************
			/*!
			 */ 
			bool m_isPost = false;
			/*!
			 */ 
			bool m_isPre = false;
			
			
			//*********************************
			// Reference Members
			//*********************************
			/*!
			 */
			std::shared_ptr<Bag<ocl::Values::NameValueBinding>> m_bindings;
			/*!
			 */
			std::shared_ptr<Bag<ocl::Values::OclMessageValue>> m_inputQ;
			/*!
			 */
			std::shared_ptr<Bag<ocl::Values::OclMessageValue>> m_outputQ;
			/*!
			 */
			std::shared_ptr<ocl::Values::LocalSnapshot > m_pred;
			/*!
			 */
			std::shared_ptr<ocl::Values::LocalSnapshot > m_succ;
			

		public:
			//*********************************
			// Union Getter
			//*********************************
			

			virtual std::shared_ptr<ecore::EObject> eContainer() const = 0; 
			
			//*********************************
			// Persistence Functions
			//*********************************
			virtual void load(std::shared_ptr<persistence::interfaces::XLoadHandler> loadHandler) = 0;
			
			virtual void resolveReferences(const int featureID, std::list<std::shared_ptr<ecore::EObject> > references) = 0;
			virtual void save(std::shared_ptr<persistence::interfaces::XSaveHandler> saveHandler) const = 0;
			
	};

}
#endif /* end of include guard: OCL_VALUES_LOCALSNAPSHOT_HPP */
